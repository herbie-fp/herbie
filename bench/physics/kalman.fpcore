(FPCore (dt r)
        :name "Kalman filter per K"
        :pre (and (< 0 dt) (< r 0))
        ; initializing matrices
        (let ([p00 25.0]
              [p01 0.0]
              [p02 0.0]
              [p10 0.0]
              [p11 10.0]
              [p12 0.0]
              [p20 0.0]
              [p21 0.0]
              [p22 1.0]
        
              [f00 1.0]
              [f01 dt]
              [f02 (* 0.5 (* dt dt))]
              [f10 0.0]
              [f11 1.0]
              [f12 dt]
              [f20 0.0]
              [f21 0.0]
              [f22 1.0]
        
              [q00 (* 0.25 (* dt (* dt (* dt dt))))]
              [q01 (* 0.5 (* dt (* dt dt)))]
              [q02 (* 0.5 (* dt dt))]
              [q10 (* 0.5 (* dt (* dt dt)))]
              [q11 (* dt dt)]
              [q12 dt]
              [q20 (* 0.5 (* dt dt))]
              [q21 dt]
              [q22 1])
          ; axbT_33(P, F, P)
          (let ([p00* (+ (+ (* p00 f00) (* p01 f01)) (* p02 f02))]
                [p01* (+ (+ (* p00 f10) (* p01 f11)) (* p02 f12))]
                [p02* (+ (+ (* p00 f20) (* p01 f21)) (* p02 f22))]
                [p10* (+ (+ (* p10 f00) (* p11 f01)) (* p12 f02))]
                [p11* (+ (+ (* p10 f10) (* p11 f11)) (* p12 f12))]
                [p12* (+ (+ (* p10 f20) (* p11 f21)) (* p12 f22))]
                [p20* (+ (+ (* p20 f00) (* p21 f01)) (* p22 f02))]
                [p21* (+ (+ (* p20 f10) (* p21 f11)) (* p22 f12))]
                [p22* (+ (+ (* p20 f20) (* p21 f21)) (* p22 f22))])
            ; axb_33(F, P, P)
            (let ([p00** (+ (+ (* f00 p00*) (* f01 p10*)) (* f02 p20*))]
                  [p01** (+ (+ (* f00 p01*) (* f01 p11*)) (* f02 p21*))]
                  [p02** (+ (+ (* f00 p02*) (* f01 p12*)) (* f02 p22*))]
                  [p10** (+ (+ (* f10 p00*) (* f11 p10*)) (* f12 p20*))]
                  [p11** (+ (+ (* f10 p01*) (* f11 p11*)) (* f12 p21*))]
                  [p12** (+ (+ (* f10 p02*) (* f11 p12*)) (* f12 p22*))]
                  [p20** (+ (+ (* f20 p00*) (* f21 p10*)) (* f22 p20*))]
                  [p21** (+ (+ (* f20 p01*) (* f21 p11*)) (* f22 p21*))]
                  [p22** (+ (+ (* f20 p02*) (* f21 p12*)) (* f22 p22*))])
              ; a_add_b_33(P, Q, P)
              (let ([p00*** (+ p00** q00)]
                    [p01*** (+ p01** q01)]
                    [p02*** (+ p02** q02)]
                    [p10*** (+ p10** q10)]
                    [p11*** (+ p11** q11)]
                    [p12*** (+ p12** q12)]
                    [p20*** (+ p20** q20)]
                    [p21*** (+ p21** q21)]
                    [p22*** (+ p22** q22)])
                ; update_K
                (let ([K0 (/ p00*** (+ p00*** r))]
                      [K1 (/ p10*** (+ p00*** r))]
                      [K2 (/ p20*** (+ p00*** r))])
                  K0))))))
                      
(FPCore (x0 x1 x2 dt r sensor)
        :name "Kalman filter per x"
        :pre (and (< 0 dt) (< r 0) (< 0 sensor))
        ; initializing matrices
        (let ([p00 25.0]
              [p01 0.0]
              [p02 0.0]
              [p10 0.0]
              [p11 10.0]
              [p12 0.0]
              [p20 0.0]
              [p21 0.0]
              [p22 1.0]
        
              [f00 1.0]
              [f01 dt]
              [f02 (* 0.5 (* dt dt))]
              [f10 0.0]
              [f11 1.0]
              [f12 dt]
              [f20 0.0]
              [f21 0.0]
              [f22 1.0]
        
              [q00 (* 0.25 (* dt (* dt (* dt dt))))]
              [q01 (* 0.5 (* dt (* dt dt)))]
              [q02 (* 0.5 (* dt dt))]
              [q10 (* 0.5 (* dt (* dt dt)))]
              [q11 (* dt dt)]
              [q12 dt]
              [q20 (* 0.5 (* dt dt))]
              [q21 dt]
              [q22 1])
          ; axbT_33(P, F, P)
          (let ([p00* (+ (+ (* p00 f00) (* p01 f01)) (* p02 f02))]
                [p01* (+ (+ (* p00 f10) (* p01 f11)) (* p02 f12))]
                [p02* (+ (+ (* p00 f20) (* p01 f21)) (* p02 f22))]
                [p10* (+ (+ (* p10 f00) (* p11 f01)) (* p12 f02))]
                [p11* (+ (+ (* p10 f10) (* p11 f11)) (* p12 f12))]
                [p12* (+ (+ (* p10 f20) (* p11 f21)) (* p12 f22))]
                [p20* (+ (+ (* p20 f00) (* p21 f01)) (* p22 f02))]
                [p21* (+ (+ (* p20 f10) (* p21 f11)) (* p22 f12))]
                [p22* (+ (+ (* p20 f20) (* p21 f21)) (* p22 f22))])
            ; axb_33(F, P, P)
            (let ([p00** (+ (+ (* f00 p00*) (* f01 p10*)) (* f02 p20*))]
                  [p01** (+ (+ (* f00 p01*) (* f01 p11*)) (* f02 p21*))]
                  [p02** (+ (+ (* f00 p02*) (* f01 p12*)) (* f02 p22*))]
                  [p10** (+ (+ (* f10 p00*) (* f11 p10*)) (* f12 p20*))]
                  [p11** (+ (+ (* f10 p01*) (* f11 p11*)) (* f12 p21*))]
                  [p12** (+ (+ (* f10 p02*) (* f11 p12*)) (* f12 p22*))]
                  [p20** (+ (+ (* f20 p00*) (* f21 p10*)) (* f22 p20*))]
                  [p21** (+ (+ (* f20 p01*) (* f21 p11*)) (* f22 p21*))]
                  [p22** (+ (+ (* f20 p02*) (* f21 p12*)) (* f22 p22*))])
              ; a_add_b_33(P, Q, P)
              (let ([p00*** (+ p00** q00)]
                    [p01*** (+ p01** q01)]
                    [p02*** (+ p02** q02)]
                    [p10*** (+ p10** q10)]
                    [p11*** (+ p11** q11)]
                    [p12*** (+ p12** q12)]
                    [p20*** (+ p20** q20)]
                    [p21*** (+ p21** q21)]
                    [p22*** (+ p22** q22)])
                ; update_K
                (let ([K0 (/ p00*** (+ p00*** r))]
                      [K1 (/ p10*** (+ p00*** r))]
                      [K2 (/ p20*** (+ p00*** r))])
                  ; predict_x
                  (let ([x0* (+ x0 (+ x1 (* 0.5 (* dt (* dt x2)))))]
                        [x1* (+ x1 x2)]
                        [x2* x2])
                    (let ([y (- sensor x0*)])
                      ; update_x
                      (let ([x0** (+ x0* (* K0 y))]
                            [x1** (+ x1* (* K1 y))]
                            [x2** (+ x2* (* K2 y))])
                        x0**)))))))))
                        
(FPCore (dt r)
        :name "Kalman filter per P"
        :pre (and (< 0 dt) (< r 0))
        ; initializing matrices
        (let ([p00 25.0]
              [p01 0.0]
              [p02 0.0]
              [p10 0.0]
              [p11 10.0]
              [p12 0.0]
              [p20 0.0]
              [p21 0.0]
              [p22 1.0]
        
              [f00 1.0]
              [f01 dt]
              [f02 (* 0.5 (* dt dt))]
              [f10 0.0]
              [f11 1.0]
              [f12 dt]
              [f20 0.0]
              [f21 0.0]
              [f22 1.0]
        
              [q00 (* 0.25 (* dt (* dt (* dt dt))))]
              [q01 (* 0.5 (* dt (* dt dt)))]
              [q02 (* 0.5 (* dt dt))]
              [q10 (* 0.5 (* dt (* dt dt)))]
              [q11 (* dt dt)]
              [q12 dt]
              [q20 (* 0.5 (* dt dt))]
              [q21 dt]
              [q22 1])
          ; axbT_33(P, F, P)
          (let ([p00* (+ (+ (* p00 f00) (* p01 f01)) (* p02 f02))]
                [p01* (+ (+ (* p00 f10) (* p01 f11)) (* p02 f12))]
                [p02* (+ (+ (* p00 f20) (* p01 f21)) (* p02 f22))]
                [p10* (+ (+ (* p10 f00) (* p11 f01)) (* p12 f02))]
                [p11* (+ (+ (* p10 f10) (* p11 f11)) (* p12 f12))]
                [p12* (+ (+ (* p10 f20) (* p11 f21)) (* p12 f22))]
                [p20* (+ (+ (* p20 f00) (* p21 f01)) (* p22 f02))]
                [p21* (+ (+ (* p20 f10) (* p21 f11)) (* p22 f12))]
                [p22* (+ (+ (* p20 f20) (* p21 f21)) (* p22 f22))])
            ; axb_33(F, P, P)
            (let ([p00** (+ (+ (* f00 p00*) (* f01 p10*)) (* f02 p20*))]
                  [p01** (+ (+ (* f00 p01*) (* f01 p11*)) (* f02 p21*))]
                  [p02** (+ (+ (* f00 p02*) (* f01 p12*)) (* f02 p22*))]
                  [p10** (+ (+ (* f10 p00*) (* f11 p10*)) (* f12 p20*))]
                  [p11** (+ (+ (* f10 p01*) (* f11 p11*)) (* f12 p21*))]
                  [p12** (+ (+ (* f10 p02*) (* f11 p12*)) (* f12 p22*))]
                  [p20** (+ (+ (* f20 p00*) (* f21 p10*)) (* f22 p20*))]
                  [p21** (+ (+ (* f20 p01*) (* f21 p11*)) (* f22 p21*))]
                  [p22** (+ (+ (* f20 p02*) (* f21 p12*)) (* f22 p22*))])
              ; a_add_b_33(P, Q, P)
              (let ([p00*** (+ p00** q00)]
                    [p01*** (+ p01** q01)]
                    [p02*** (+ p02** q02)]
                    [p10*** (+ p10** q10)]
                    [p11*** (+ p11** q11)]
                    [p12*** (+ p12** q12)]
                    [p20*** (+ p20** q20)]
                    [p21*** (+ p21** q21)]
                    [p22*** (+ p22** q22)])
                ; update_K
                (let ([K0 (/ p00*** (+ p00*** r))]
                      [K1 (/ p10*** (+ p00*** r))]
                      [K2 (/ p20*** (+ p00*** r))])
                  ; update_P
                  (let ([eyekh00 (- 1 K0)]
                        [eyekh01 0.0]
                        [eyekh02 0.0]
                        [eyekh10 (- K1)]
                        [eyekh11 1.0]
                        [eyekh12 0.0]
                        [eyekh20 (- K2)]
                        [eyekh21 0.0]
                        [eyekh22 1.0])
                    ; axb_33(&eyekh, P, P)
                    (let ([p00**** (+ (+ (* eyekh00 p00***) (* eyekh01 p10***)) (* eyekh02 p20***))]
                          [p01**** (+ (+ (* eyekh00 p01***) (* eyekh01 p11***)) (* eyekh02 p21***))]
                          [p02**** (+ (+ (* eyekh00 p02***) (* eyekh01 p12***)) (* eyekh02 p22***))]
                          [p10**** (+ (+ (* eyekh10 p00***) (* eyekh11 p10***)) (* eyekh12 p20***))]
                          [p11**** (+ (+ (* eyekh10 p01***) (* eyekh11 p11***)) (* eyekh12 p21***))]
                          [p12**** (+ (+ (* eyekh10 p02***) (* eyekh11 p12***)) (* eyekh12 p22***))]
                          [p20**** (+ (+ (* eyekh20 p00***) (* eyekh21 p10***)) (* eyekh22 p20***))]
                          [p21**** (+ (+ (* eyekh20 p01***) (* eyekh21 p11***)) (* eyekh22 p21***))]
                          [p22**** (+ (+ (* eyekh20 p02***) (* eyekh21 p12***)) (* eyekh22 p22***))])
                      p00****))))))))
